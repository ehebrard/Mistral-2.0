predicate all_different_int(array [int] of var int: x);
array [1..81] of var 0..81: diffs;
array [1..9] of var 0..81: mark :: output_array([1..9]);
constraint all_different_int([diffs[10], diffs[19], diffs[20], diffs[28], diffs[29], diffs[30], diffs[37], diffs[38], diffs[39], diffs[40], diffs[46], diffs[47], diffs[48], diffs[49], diffs[50], diffs[55], diffs[56], diffs[57], diffs[58], diffs[59], diffs[60], diffs[64], diffs[65], diffs[66], diffs[67], diffs[68], diffs[69], diffs[70], diffs[73], diffs[74], diffs[75], diffs[76], diffs[77], diffs[78], diffs[79], diffs[80]]);
constraint int_eq(mark[1], 0);
constraint int_lin_eq([1, 1, -1], [diffs[10], mark[1], mark[2]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[19], mark[1], mark[3]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[20], mark[2], mark[3]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[28], mark[1], mark[4]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[29], mark[2], mark[4]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[30], mark[3], mark[4]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[37], mark[1], mark[5]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[38], mark[2], mark[5]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[39], mark[3], mark[5]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[40], mark[4], mark[5]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[46], mark[1], mark[6]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[47], mark[2], mark[6]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[48], mark[3], mark[6]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[49], mark[4], mark[6]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[50], mark[5], mark[6]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[55], mark[1], mark[7]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[56], mark[2], mark[7]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[57], mark[3], mark[7]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[58], mark[4], mark[7]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[59], mark[5], mark[7]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[60], mark[6], mark[7]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[64], mark[1], mark[8]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[65], mark[2], mark[8]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[66], mark[3], mark[8]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[67], mark[4], mark[8]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[68], mark[5], mark[8]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[69], mark[6], mark[8]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[70], mark[7], mark[8]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[73], mark[1], mark[9]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[74], mark[2], mark[9]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[75], mark[3], mark[9]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[76], mark[4], mark[9]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[77], mark[5], mark[9]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[78], mark[6], mark[9]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[79], mark[7], mark[9]], 0);
constraint int_lin_eq([1, 1, -1], [diffs[80], mark[8], mark[9]], 0);
constraint int_lt(diffs[10], diffs[80]);
constraint int_lt(mark[1], mark[2]);
constraint int_lt(mark[2], mark[3]);
constraint int_lt(mark[3], mark[4]);
constraint int_lt(mark[4], mark[5]);
constraint int_lt(mark[5], mark[6]);
constraint int_lt(mark[6], mark[7]);
constraint int_lt(mark[7], mark[8]);
constraint int_lt(mark[8], mark[9]);
solve minimize mark[9];
