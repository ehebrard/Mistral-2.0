array [1..9] of int: puzzle = [1, 0, 2, 0, 3, 0, 4, 0, 5];
array [1..5] of int: region_size = [2, 2, 2, 2, 1];
var bool: BOOL____00001 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00005 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00007 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00009 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00011 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00013 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00015 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00017 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00019 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00021 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00023 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00025 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00027 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00029 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00031 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00033 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00035 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00037 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00039 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00041 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00043 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00045 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00047 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00049 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00051 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00053 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00055 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00057 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00059 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00061 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00063 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00065 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00067 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00069 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00071 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00073 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00075 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00077 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00079 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00081 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00083 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00085 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00087 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00089 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00091 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00092 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00093 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00094 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00095 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00096 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00097 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00098 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00099 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00100 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00101 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00102 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00103 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00104 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00105 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00106 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00107 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00108 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00109 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00110 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00111 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00112 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00113 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00114 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00115 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00116 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00117 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00118 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00119 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00120 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00121 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00122 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00123 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00124 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00125 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00126 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00127 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00128 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00129 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00130 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00131 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00132 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00133 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00134 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00135 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00136 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00137 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00138 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00139 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00140 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00142 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00143 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00144 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00145 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00146 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00147 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00148 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00149 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00150 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00151 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00152 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00153 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00154 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00155 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00156 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00157 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00158 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00159 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00002 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00004 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00006 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00008 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00010 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00012 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00014 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00016 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00018 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00020 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00022 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00024 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00026 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00028 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00030 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00032 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00034 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00036 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00038 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00040 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00042 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00044 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00046 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00048 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00050 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00052 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00054 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00056 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00058 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00060 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00062 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00064 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00066 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00068 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00070 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00072 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00074 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00076 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00078 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00080 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00082 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00084 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00086 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00088 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00090 :: is_defined_var :: var_is_introduced;
array [1..9] of var 1..5: grid :: output_array([1..3, 1..3]);
array [1..9] of var 1..2: when;
constraint array_bool_and([BOOL____00123, BOOL____00124], BOOL____00127) :: defines_var(BOOL____00127);
constraint array_bool_and([BOOL____00125, BOOL____00126], BOOL____00128) :: defines_var(BOOL____00128);
constraint array_bool_and([BOOL____00129, BOOL____00130], BOOL____00131) :: defines_var(BOOL____00131);
constraint array_bool_and([BOOL____00132, BOOL____00133], BOOL____00136) :: defines_var(BOOL____00136);
constraint array_bool_and([BOOL____00134, BOOL____00135], BOOL____00137) :: defines_var(BOOL____00137);
constraint array_bool_and([BOOL____00138, BOOL____00139], BOOL____00140) :: defines_var(BOOL____00140);
constraint array_bool_and([BOOL____00142, BOOL____00143], BOOL____00146) :: defines_var(BOOL____00146);
constraint array_bool_and([BOOL____00144, BOOL____00145], BOOL____00147) :: defines_var(BOOL____00147);
constraint array_bool_and([BOOL____00148, BOOL____00149], BOOL____00150) :: defines_var(BOOL____00150);
constraint array_bool_and([BOOL____00151, BOOL____00152], BOOL____00155) :: defines_var(BOOL____00155);
constraint array_bool_and([BOOL____00153, BOOL____00154], BOOL____00156) :: defines_var(BOOL____00156);
constraint array_bool_and([BOOL____00157, BOOL____00158], BOOL____00159) :: defines_var(BOOL____00159);
constraint array_bool_or([BOOL____00131, BOOL____00127, BOOL____00128], true);
constraint array_bool_or([BOOL____00140, BOOL____00136, BOOL____00137], true);
constraint array_bool_or([BOOL____00150, BOOL____00146, BOOL____00147], true);
constraint array_bool_or([BOOL____00159, BOOL____00155, BOOL____00156], true);
constraint bool2int(BOOL____00001, INT____00002) :: defines_var(INT____00002);
constraint bool2int(BOOL____00003, INT____00004) :: defines_var(INT____00004);
constraint bool2int(BOOL____00005, INT____00006) :: defines_var(INT____00006);
constraint bool2int(BOOL____00007, INT____00008) :: defines_var(INT____00008);
constraint bool2int(BOOL____00009, INT____00010) :: defines_var(INT____00010);
constraint bool2int(BOOL____00011, INT____00012) :: defines_var(INT____00012);
constraint bool2int(BOOL____00013, INT____00014) :: defines_var(INT____00014);
constraint bool2int(BOOL____00015, INT____00016) :: defines_var(INT____00016);
constraint bool2int(BOOL____00017, INT____00018) :: defines_var(INT____00018);
constraint bool2int(BOOL____00019, INT____00020) :: defines_var(INT____00020);
constraint bool2int(BOOL____00021, INT____00022) :: defines_var(INT____00022);
constraint bool2int(BOOL____00023, INT____00024) :: defines_var(INT____00024);
constraint bool2int(BOOL____00025, INT____00026) :: defines_var(INT____00026);
constraint bool2int(BOOL____00027, INT____00028) :: defines_var(INT____00028);
constraint bool2int(BOOL____00029, INT____00030) :: defines_var(INT____00030);
constraint bool2int(BOOL____00031, INT____00032) :: defines_var(INT____00032);
constraint bool2int(BOOL____00033, INT____00034) :: defines_var(INT____00034);
constraint bool2int(BOOL____00035, INT____00036) :: defines_var(INT____00036);
constraint bool2int(BOOL____00037, INT____00038) :: defines_var(INT____00038);
constraint bool2int(BOOL____00039, INT____00040) :: defines_var(INT____00040);
constraint bool2int(BOOL____00041, INT____00042) :: defines_var(INT____00042);
constraint bool2int(BOOL____00043, INT____00044) :: defines_var(INT____00044);
constraint bool2int(BOOL____00045, INT____00046) :: defines_var(INT____00046);
constraint bool2int(BOOL____00047, INT____00048) :: defines_var(INT____00048);
constraint bool2int(BOOL____00049, INT____00050) :: defines_var(INT____00050);
constraint bool2int(BOOL____00051, INT____00052) :: defines_var(INT____00052);
constraint bool2int(BOOL____00053, INT____00054) :: defines_var(INT____00054);
constraint bool2int(BOOL____00055, INT____00056) :: defines_var(INT____00056);
constraint bool2int(BOOL____00057, INT____00058) :: defines_var(INT____00058);
constraint bool2int(BOOL____00059, INT____00060) :: defines_var(INT____00060);
constraint bool2int(BOOL____00061, INT____00062) :: defines_var(INT____00062);
constraint bool2int(BOOL____00063, INT____00064) :: defines_var(INT____00064);
constraint bool2int(BOOL____00065, INT____00066) :: defines_var(INT____00066);
constraint bool2int(BOOL____00067, INT____00068) :: defines_var(INT____00068);
constraint bool2int(BOOL____00069, INT____00070) :: defines_var(INT____00070);
constraint bool2int(BOOL____00071, INT____00072) :: defines_var(INT____00072);
constraint bool2int(BOOL____00073, INT____00074) :: defines_var(INT____00074);
constraint bool2int(BOOL____00075, INT____00076) :: defines_var(INT____00076);
constraint bool2int(BOOL____00077, INT____00078) :: defines_var(INT____00078);
constraint bool2int(BOOL____00079, INT____00080) :: defines_var(INT____00080);
constraint bool2int(BOOL____00081, INT____00082) :: defines_var(INT____00082);
constraint bool2int(BOOL____00083, INT____00084) :: defines_var(INT____00084);
constraint bool2int(BOOL____00085, INT____00086) :: defines_var(INT____00086);
constraint bool2int(BOOL____00087, INT____00088) :: defines_var(INT____00088);
constraint bool2int(BOOL____00089, INT____00090) :: defines_var(INT____00090);
constraint bool_le(BOOL____00001, BOOL____00091);
constraint bool_le(BOOL____00001, BOOL____00093);
constraint bool_le(BOOL____00001, BOOL____00107);
constraint bool_le(BOOL____00001, BOOL____00108);
constraint bool_le(BOOL____00001, BOOL____00115);
constraint bool_le(BOOL____00001, BOOL____00116);
constraint bool_le(BOOL____00003, BOOL____00095);
constraint bool_le(BOOL____00003, BOOL____00097);
constraint bool_le(BOOL____00003, BOOL____00109);
constraint bool_le(BOOL____00003, BOOL____00110);
constraint bool_le(BOOL____00003, BOOL____00117);
constraint bool_le(BOOL____00003, BOOL____00118);
constraint bool_le(BOOL____00005, BOOL____00099);
constraint bool_le(BOOL____00005, BOOL____00111);
constraint bool_le(BOOL____00005, BOOL____00119);
constraint bool_le(BOOL____00007, BOOL____00095);
constraint bool_le(BOOL____00007, BOOL____00101);
constraint bool_le(BOOL____00007, BOOL____00109);
constraint bool_le(BOOL____00007, BOOL____00112);
constraint bool_le(BOOL____00007, BOOL____00117);
constraint bool_le(BOOL____00007, BOOL____00120);
constraint bool_le(BOOL____00009, BOOL____00099);
constraint bool_le(BOOL____00009, BOOL____00103);
constraint bool_le(BOOL____00009, BOOL____00111);
constraint bool_le(BOOL____00009, BOOL____00113);
constraint bool_le(BOOL____00009, BOOL____00119);
constraint bool_le(BOOL____00009, BOOL____00121);
constraint bool_le(BOOL____00011, BOOL____00105);
constraint bool_le(BOOL____00011, BOOL____00114);
constraint bool_le(BOOL____00011, BOOL____00122);
constraint bool_le(BOOL____00013, BOOL____00103);
constraint bool_le(BOOL____00013, BOOL____00113);
constraint bool_le(BOOL____00013, BOOL____00121);
constraint bool_le(BOOL____00015, BOOL____00105);
constraint bool_le(BOOL____00015, BOOL____00114);
constraint bool_le(BOOL____00015, BOOL____00122);
constraint bool_le(BOOL____00019, BOOL____00092);
constraint bool_le(BOOL____00019, BOOL____00094);
constraint bool_le(BOOL____00019, BOOL____00107);
constraint bool_le(BOOL____00019, BOOL____00108);
constraint bool_le(BOOL____00019, BOOL____00115);
constraint bool_le(BOOL____00019, BOOL____00116);
constraint bool_le(BOOL____00021, BOOL____00096);
constraint bool_le(BOOL____00021, BOOL____00098);
constraint bool_le(BOOL____00021, BOOL____00109);
constraint bool_le(BOOL____00021, BOOL____00110);
constraint bool_le(BOOL____00021, BOOL____00117);
constraint bool_le(BOOL____00021, BOOL____00118);
constraint bool_le(BOOL____00023, BOOL____00100);
constraint bool_le(BOOL____00023, BOOL____00111);
constraint bool_le(BOOL____00023, BOOL____00119);
constraint bool_le(BOOL____00025, BOOL____00096);
constraint bool_le(BOOL____00025, BOOL____00102);
constraint bool_le(BOOL____00025, BOOL____00109);
constraint bool_le(BOOL____00025, BOOL____00112);
constraint bool_le(BOOL____00025, BOOL____00117);
constraint bool_le(BOOL____00025, BOOL____00120);
constraint bool_le(BOOL____00027, BOOL____00100);
constraint bool_le(BOOL____00027, BOOL____00104);
constraint bool_le(BOOL____00027, BOOL____00111);
constraint bool_le(BOOL____00027, BOOL____00113);
constraint bool_le(BOOL____00027, BOOL____00119);
constraint bool_le(BOOL____00027, BOOL____00121);
constraint bool_le(BOOL____00029, BOOL____00106);
constraint bool_le(BOOL____00029, BOOL____00114);
constraint bool_le(BOOL____00029, BOOL____00122);
constraint bool_le(BOOL____00031, BOOL____00104);
constraint bool_le(BOOL____00031, BOOL____00113);
constraint bool_le(BOOL____00031, BOOL____00121);
constraint bool_le(BOOL____00033, BOOL____00106);
constraint bool_le(BOOL____00033, BOOL____00114);
constraint bool_le(BOOL____00033, BOOL____00122);
constraint bool_le(BOOL____00037, BOOL____00091);
constraint bool_le(BOOL____00037, BOOL____00092);
constraint bool_le(BOOL____00037, BOOL____00093);
constraint bool_le(BOOL____00037, BOOL____00094);
constraint bool_le(BOOL____00037, BOOL____00115);
constraint bool_le(BOOL____00037, BOOL____00116);
constraint bool_le(BOOL____00039, BOOL____00095);
constraint bool_le(BOOL____00039, BOOL____00096);
constraint bool_le(BOOL____00039, BOOL____00097);
constraint bool_le(BOOL____00039, BOOL____00098);
constraint bool_le(BOOL____00039, BOOL____00117);
constraint bool_le(BOOL____00039, BOOL____00118);
constraint bool_le(BOOL____00041, BOOL____00099);
constraint bool_le(BOOL____00041, BOOL____00100);
constraint bool_le(BOOL____00041, BOOL____00119);
constraint bool_le(BOOL____00043, BOOL____00095);
constraint bool_le(BOOL____00043, BOOL____00096);
constraint bool_le(BOOL____00043, BOOL____00101);
constraint bool_le(BOOL____00043, BOOL____00102);
constraint bool_le(BOOL____00043, BOOL____00117);
constraint bool_le(BOOL____00043, BOOL____00120);
constraint bool_le(BOOL____00045, BOOL____00099);
constraint bool_le(BOOL____00045, BOOL____00100);
constraint bool_le(BOOL____00045, BOOL____00103);
constraint bool_le(BOOL____00045, BOOL____00104);
constraint bool_le(BOOL____00045, BOOL____00119);
constraint bool_le(BOOL____00045, BOOL____00121);
constraint bool_le(BOOL____00047, BOOL____00105);
constraint bool_le(BOOL____00047, BOOL____00106);
constraint bool_le(BOOL____00047, BOOL____00122);
constraint bool_le(BOOL____00049, BOOL____00103);
constraint bool_le(BOOL____00049, BOOL____00104);
constraint bool_le(BOOL____00049, BOOL____00121);
constraint bool_le(BOOL____00051, BOOL____00105);
constraint bool_le(BOOL____00051, BOOL____00106);
constraint bool_le(BOOL____00051, BOOL____00122);
constraint bool_le(BOOL____00055, BOOL____00091);
constraint bool_le(BOOL____00055, BOOL____00092);
constraint bool_le(BOOL____00055, BOOL____00093);
constraint bool_le(BOOL____00055, BOOL____00094);
constraint bool_le(BOOL____00055, BOOL____00107);
constraint bool_le(BOOL____00055, BOOL____00108);
constraint bool_le(BOOL____00057, BOOL____00095);
constraint bool_le(BOOL____00057, BOOL____00096);
constraint bool_le(BOOL____00057, BOOL____00097);
constraint bool_le(BOOL____00057, BOOL____00098);
constraint bool_le(BOOL____00057, BOOL____00109);
constraint bool_le(BOOL____00057, BOOL____00110);
constraint bool_le(BOOL____00059, BOOL____00099);
constraint bool_le(BOOL____00059, BOOL____00100);
constraint bool_le(BOOL____00059, BOOL____00111);
constraint bool_le(BOOL____00061, BOOL____00095);
constraint bool_le(BOOL____00061, BOOL____00096);
constraint bool_le(BOOL____00061, BOOL____00101);
constraint bool_le(BOOL____00061, BOOL____00102);
constraint bool_le(BOOL____00061, BOOL____00109);
constraint bool_le(BOOL____00061, BOOL____00112);
constraint bool_le(BOOL____00063, BOOL____00099);
constraint bool_le(BOOL____00063, BOOL____00100);
constraint bool_le(BOOL____00063, BOOL____00103);
constraint bool_le(BOOL____00063, BOOL____00104);
constraint bool_le(BOOL____00063, BOOL____00111);
constraint bool_le(BOOL____00063, BOOL____00113);
constraint bool_le(BOOL____00065, BOOL____00105);
constraint bool_le(BOOL____00065, BOOL____00106);
constraint bool_le(BOOL____00065, BOOL____00114);
constraint bool_le(BOOL____00067, BOOL____00103);
constraint bool_le(BOOL____00067, BOOL____00104);
constraint bool_le(BOOL____00067, BOOL____00113);
constraint bool_le(BOOL____00069, BOOL____00105);
constraint bool_le(BOOL____00069, BOOL____00106);
constraint bool_le(BOOL____00069, BOOL____00114);
constraint int_eq(grid[1], 1);
constraint int_eq(grid[3], 2);
constraint int_eq(grid[5], 3);
constraint int_eq(grid[7], 4);
constraint int_eq(grid[9], 5);
constraint int_eq(when[1], 1);
constraint int_eq(when[3], 1);
constraint int_eq(when[5], 1);
constraint int_eq(when[7], 1);
constraint int_eq(when[9], 1);
constraint int_eq_reif(grid[1], 1, BOOL____00001) :: defines_var(BOOL____00001);
constraint int_eq_reif(grid[1], 2, BOOL____00019) :: defines_var(BOOL____00019);
constraint int_eq_reif(grid[1], 3, BOOL____00037) :: defines_var(BOOL____00037);
constraint int_eq_reif(grid[1], 4, BOOL____00055) :: defines_var(BOOL____00055);
constraint int_eq_reif(grid[1], 5, BOOL____00073) :: defines_var(BOOL____00073);
constraint int_eq_reif(grid[2], 1, BOOL____00003) :: defines_var(BOOL____00003);
constraint int_eq_reif(grid[2], 2, BOOL____00021) :: defines_var(BOOL____00021);
constraint int_eq_reif(grid[2], 3, BOOL____00039) :: defines_var(BOOL____00039);
constraint int_eq_reif(grid[2], 4, BOOL____00057) :: defines_var(BOOL____00057);
constraint int_eq_reif(grid[2], 5, BOOL____00075) :: defines_var(BOOL____00075);
constraint int_eq_reif(grid[2], grid[1], BOOL____00129) :: defines_var(BOOL____00129);
constraint int_eq_reif(grid[2], grid[3], BOOL____00125) :: defines_var(BOOL____00125);
constraint int_eq_reif(grid[2], grid[5], BOOL____00123) :: defines_var(BOOL____00123);
constraint int_eq_reif(grid[3], 1, BOOL____00005) :: defines_var(BOOL____00005);
constraint int_eq_reif(grid[3], 2, BOOL____00023) :: defines_var(BOOL____00023);
constraint int_eq_reif(grid[3], 3, BOOL____00041) :: defines_var(BOOL____00041);
constraint int_eq_reif(grid[3], 4, BOOL____00059) :: defines_var(BOOL____00059);
constraint int_eq_reif(grid[3], 5, BOOL____00077) :: defines_var(BOOL____00077);
constraint int_eq_reif(grid[4], 1, BOOL____00007) :: defines_var(BOOL____00007);
constraint int_eq_reif(grid[4], 2, BOOL____00025) :: defines_var(BOOL____00025);
constraint int_eq_reif(grid[4], 3, BOOL____00043) :: defines_var(BOOL____00043);
constraint int_eq_reif(grid[4], 4, BOOL____00061) :: defines_var(BOOL____00061);
constraint int_eq_reif(grid[4], 5, BOOL____00079) :: defines_var(BOOL____00079);
constraint int_eq_reif(grid[4], grid[1], BOOL____00134) :: defines_var(BOOL____00134);
constraint int_eq_reif(grid[4], grid[5], BOOL____00138) :: defines_var(BOOL____00138);
constraint int_eq_reif(grid[4], grid[7], BOOL____00132) :: defines_var(BOOL____00132);
constraint int_eq_reif(grid[5], 1, BOOL____00009) :: defines_var(BOOL____00009);
constraint int_eq_reif(grid[5], 2, BOOL____00027) :: defines_var(BOOL____00027);
constraint int_eq_reif(grid[5], 3, BOOL____00045) :: defines_var(BOOL____00045);
constraint int_eq_reif(grid[5], 4, BOOL____00063) :: defines_var(BOOL____00063);
constraint int_eq_reif(grid[5], 5, BOOL____00081) :: defines_var(BOOL____00081);
constraint int_eq_reif(grid[6], 1, BOOL____00011) :: defines_var(BOOL____00011);
constraint int_eq_reif(grid[6], 2, BOOL____00029) :: defines_var(BOOL____00029);
constraint int_eq_reif(grid[6], 3, BOOL____00047) :: defines_var(BOOL____00047);
constraint int_eq_reif(grid[6], 4, BOOL____00065) :: defines_var(BOOL____00065);
constraint int_eq_reif(grid[6], 5, BOOL____00083) :: defines_var(BOOL____00083);
constraint int_eq_reif(grid[6], grid[3], BOOL____00144) :: defines_var(BOOL____00144);
constraint int_eq_reif(grid[6], grid[5], BOOL____00148) :: defines_var(BOOL____00148);
constraint int_eq_reif(grid[6], grid[9], BOOL____00142) :: defines_var(BOOL____00142);
constraint int_eq_reif(grid[7], 1, BOOL____00013) :: defines_var(BOOL____00013);
constraint int_eq_reif(grid[7], 2, BOOL____00031) :: defines_var(BOOL____00031);
constraint int_eq_reif(grid[7], 3, BOOL____00049) :: defines_var(BOOL____00049);
constraint int_eq_reif(grid[7], 4, BOOL____00067) :: defines_var(BOOL____00067);
constraint int_eq_reif(grid[7], 5, BOOL____00085) :: defines_var(BOOL____00085);
constraint int_eq_reif(grid[8], 1, BOOL____00015) :: defines_var(BOOL____00015);
constraint int_eq_reif(grid[8], 2, BOOL____00033) :: defines_var(BOOL____00033);
constraint int_eq_reif(grid[8], 3, BOOL____00051) :: defines_var(BOOL____00051);
constraint int_eq_reif(grid[8], 4, BOOL____00069) :: defines_var(BOOL____00069);
constraint int_eq_reif(grid[8], 5, BOOL____00087) :: defines_var(BOOL____00087);
constraint int_eq_reif(grid[8], grid[5], BOOL____00151) :: defines_var(BOOL____00151);
constraint int_eq_reif(grid[8], grid[7], BOOL____00157) :: defines_var(BOOL____00157);
constraint int_eq_reif(grid[8], grid[9], BOOL____00153) :: defines_var(BOOL____00153);
constraint int_eq_reif(grid[9], 1, BOOL____00017) :: defines_var(BOOL____00017);
constraint int_eq_reif(grid[9], 2, BOOL____00035) :: defines_var(BOOL____00035);
constraint int_eq_reif(grid[9], 3, BOOL____00053) :: defines_var(BOOL____00053);
constraint int_eq_reif(grid[9], 4, BOOL____00071) :: defines_var(BOOL____00071);
constraint int_eq_reif(grid[9], 5, BOOL____00089) :: defines_var(BOOL____00089);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1], [INT____00002, INT____00004, INT____00006, INT____00008, INT____00010, INT____00012, INT____00014, INT____00016, INT____00018], 2);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1], [INT____00020, INT____00022, INT____00024, INT____00026, INT____00028, INT____00030, INT____00032, INT____00034, INT____00036], 2);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1], [INT____00038, INT____00040, INT____00042, INT____00044, INT____00046, INT____00048, INT____00050, INT____00052, INT____00054], 2);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1], [INT____00056, INT____00058, INT____00060, INT____00062, INT____00064, INT____00066, INT____00068, INT____00070, INT____00072], 2);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1], [INT____00074, INT____00076, INT____00078, INT____00080, INT____00082, INT____00084, INT____00086, INT____00088, INT____00090], 1);
constraint int_lin_eq_reif([-1, 1], [when[1], when[2]], 1, BOOL____00130) :: defines_var(BOOL____00130);
constraint int_lin_eq_reif([-1, 1], [when[1], when[4]], 1, BOOL____00135) :: defines_var(BOOL____00135);
constraint int_lin_eq_reif([-1, 1], [when[3], when[6]], 1, BOOL____00145) :: defines_var(BOOL____00145);
constraint int_lin_eq_reif([-1, 1], [when[5], when[6]], 1, BOOL____00149) :: defines_var(BOOL____00149);
constraint int_lin_eq_reif([-1, 1], [when[5], when[8]], 1, BOOL____00152) :: defines_var(BOOL____00152);
constraint int_lin_eq_reif([-1, 1], [when[7], when[8]], 1, BOOL____00158) :: defines_var(BOOL____00158);
constraint int_lin_eq_reif([1, -1], [when[2], when[3]], 1, BOOL____00126) :: defines_var(BOOL____00126);
constraint int_lin_eq_reif([1, -1], [when[2], when[5]], 1, BOOL____00124) :: defines_var(BOOL____00124);
constraint int_lin_eq_reif([1, -1], [when[4], when[5]], 1, BOOL____00139) :: defines_var(BOOL____00139);
constraint int_lin_eq_reif([1, -1], [when[4], when[7]], 1, BOOL____00133) :: defines_var(BOOL____00133);
constraint int_lin_eq_reif([1, -1], [when[6], when[9]], 1, BOOL____00143) :: defines_var(BOOL____00143);
constraint int_lin_eq_reif([1, -1], [when[8], when[9]], 1, BOOL____00154) :: defines_var(BOOL____00154);
constraint int_ne(grid[1], 2);
constraint int_ne(grid[1], 3);
constraint int_ne(grid[1], 4);
constraint int_ne(grid[1], 5);
constraint int_ne(grid[2], 4);
constraint int_ne(grid[2], 5);
constraint int_ne(grid[3], 1);
constraint int_ne(grid[3], 3);
constraint int_ne(grid[3], 4);
constraint int_ne(grid[3], 5);
constraint int_ne(grid[4], 2);
constraint int_ne(grid[4], 5);
constraint int_ne(grid[5], 1);
constraint int_ne(grid[5], 2);
constraint int_ne(grid[5], 4);
constraint int_ne(grid[5], 5);
constraint int_ne(grid[6], 1);
constraint int_ne(grid[6], 4);
constraint int_ne(grid[6], 5);
constraint int_ne(grid[7], 1);
constraint int_ne(grid[7], 2);
constraint int_ne(grid[7], 3);
constraint int_ne(grid[7], 5);
constraint int_ne(grid[8], 1);
constraint int_ne(grid[8], 2);
constraint int_ne(grid[8], 5);
constraint int_ne(grid[9], 1);
constraint int_ne(grid[9], 2);
constraint int_ne(grid[9], 3);
constraint int_ne(grid[9], 4);
constraint int_ne_reif(grid[2], 1, BOOL____00094) :: defines_var(BOOL____00094);
constraint int_ne_reif(grid[2], 2, BOOL____00093) :: defines_var(BOOL____00093);
constraint int_ne_reif(grid[2], 3, BOOL____00108) :: defines_var(BOOL____00108);
constraint int_ne_reif(grid[2], 4, BOOL____00116) :: defines_var(BOOL____00116);
constraint int_ne_reif(grid[3], 1, BOOL____00098) :: defines_var(BOOL____00098);
constraint int_ne_reif(grid[3], 2, BOOL____00097) :: defines_var(BOOL____00097);
constraint int_ne_reif(grid[3], 3, BOOL____00110) :: defines_var(BOOL____00110);
constraint int_ne_reif(grid[3], 4, BOOL____00118) :: defines_var(BOOL____00118);
constraint int_ne_reif(grid[4], 1, BOOL____00092) :: defines_var(BOOL____00092);
constraint int_ne_reif(grid[4], 2, BOOL____00091) :: defines_var(BOOL____00091);
constraint int_ne_reif(grid[4], 3, BOOL____00107) :: defines_var(BOOL____00107);
constraint int_ne_reif(grid[4], 4, BOOL____00115) :: defines_var(BOOL____00115);
constraint int_ne_reif(grid[5], 1, BOOL____00096) :: defines_var(BOOL____00096);
constraint int_ne_reif(grid[5], 2, BOOL____00095) :: defines_var(BOOL____00095);
constraint int_ne_reif(grid[5], 3, BOOL____00109) :: defines_var(BOOL____00109);
constraint int_ne_reif(grid[5], 4, BOOL____00117) :: defines_var(BOOL____00117);
constraint int_ne_reif(grid[6], 1, BOOL____00100) :: defines_var(BOOL____00100);
constraint int_ne_reif(grid[6], 2, BOOL____00099) :: defines_var(BOOL____00099);
constraint int_ne_reif(grid[6], 3, BOOL____00111) :: defines_var(BOOL____00111);
constraint int_ne_reif(grid[6], 4, BOOL____00119) :: defines_var(BOOL____00119);
constraint int_ne_reif(grid[7], 1, BOOL____00102) :: defines_var(BOOL____00102);
constraint int_ne_reif(grid[7], 2, BOOL____00101) :: defines_var(BOOL____00101);
constraint int_ne_reif(grid[7], 3, BOOL____00112) :: defines_var(BOOL____00112);
constraint int_ne_reif(grid[7], 4, BOOL____00120) :: defines_var(BOOL____00120);
constraint int_ne_reif(grid[8], 1, BOOL____00104) :: defines_var(BOOL____00104);
constraint int_ne_reif(grid[8], 2, BOOL____00103) :: defines_var(BOOL____00103);
constraint int_ne_reif(grid[8], 3, BOOL____00113) :: defines_var(BOOL____00113);
constraint int_ne_reif(grid[8], 4, BOOL____00121) :: defines_var(BOOL____00121);
constraint int_ne_reif(grid[9], 1, BOOL____00106) :: defines_var(BOOL____00106);
constraint int_ne_reif(grid[9], 2, BOOL____00105) :: defines_var(BOOL____00105);
constraint int_ne_reif(grid[9], 3, BOOL____00114) :: defines_var(BOOL____00114);
constraint int_ne_reif(grid[9], 4, BOOL____00122) :: defines_var(BOOL____00122);
solve  :: int_search([grid[1], grid[2], grid[3], grid[4], grid[5], grid[6], grid[7], grid[8], grid[9]], first_fail, indomain_split, complete) satisfy;
