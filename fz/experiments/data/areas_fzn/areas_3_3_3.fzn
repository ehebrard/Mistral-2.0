array [1..9] of int: puzzle = [1, 0, 2, 0, 0, 0, 3, 0, 0];
array [1..3] of int: region_size = [2, 3, 4];
var bool: BOOL____00001 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00005 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00007 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00009 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00011 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00013 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00015 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00017 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00019 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00021 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00023 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00025 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00027 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00029 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00031 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00033 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00035 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00037 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00039 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00041 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00043 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00045 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00047 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00049 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00051 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00053 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00055 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00056 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00057 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00058 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00059 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00060 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00061 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00062 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00063 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00064 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00065 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00066 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00067 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00068 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00069 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00070 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00071 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00072 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00074 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00075 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00076 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00077 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00078 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00079 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00080 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00081 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00082 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00083 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00084 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00085 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00086 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00087 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00088 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00089 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00090 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00091 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00092 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00093 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00094 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00095 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00096 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00097 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00098 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00099 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00100 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00101 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00102 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00103 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00104 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00105 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00106 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00107 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00108 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00109 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00002 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00004 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00006 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00008 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00010 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00012 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00014 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00016 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00018 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00020 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00022 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00024 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00026 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00028 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00030 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00032 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00034 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00036 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00038 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00040 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00042 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00044 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00046 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00048 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00050 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00052 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00054 :: is_defined_var :: var_is_introduced;
array [1..9] of var 1..3: grid :: output_array([1..3, 1..3]);
array [1..9] of var 1..4: when;
constraint array_bool_and([BOOL____00055, BOOL____00056], BOOL____00059) :: defines_var(BOOL____00059);
constraint array_bool_and([BOOL____00057, BOOL____00058], BOOL____00060) :: defines_var(BOOL____00060);
constraint array_bool_and([BOOL____00061, BOOL____00062], BOOL____00063) :: defines_var(BOOL____00063);
constraint array_bool_and([BOOL____00064, BOOL____00065], BOOL____00068) :: defines_var(BOOL____00068);
constraint array_bool_and([BOOL____00066, BOOL____00067], BOOL____00069) :: defines_var(BOOL____00069);
constraint array_bool_and([BOOL____00070, BOOL____00071], BOOL____00072) :: defines_var(BOOL____00072);
constraint array_bool_and([BOOL____00074, BOOL____00075], BOOL____00078) :: defines_var(BOOL____00078);
constraint array_bool_and([BOOL____00076, BOOL____00077], BOOL____00079) :: defines_var(BOOL____00079);
constraint array_bool_and([BOOL____00080, BOOL____00081], BOOL____00082) :: defines_var(BOOL____00082);
constraint array_bool_and([BOOL____00083, BOOL____00084], BOOL____00085) :: defines_var(BOOL____00085);
constraint array_bool_and([BOOL____00086, BOOL____00087], BOOL____00090) :: defines_var(BOOL____00090);
constraint array_bool_and([BOOL____00088, BOOL____00089], BOOL____00091) :: defines_var(BOOL____00091);
constraint array_bool_and([BOOL____00092, BOOL____00093], BOOL____00094) :: defines_var(BOOL____00094);
constraint array_bool_and([BOOL____00095, BOOL____00096], BOOL____00099) :: defines_var(BOOL____00099);
constraint array_bool_and([BOOL____00097, BOOL____00098], BOOL____00100) :: defines_var(BOOL____00100);
constraint array_bool_and([BOOL____00101, BOOL____00102], BOOL____00103) :: defines_var(BOOL____00103);
constraint array_bool_and([BOOL____00104, BOOL____00105], BOOL____00108) :: defines_var(BOOL____00108);
constraint array_bool_and([BOOL____00106, BOOL____00107], BOOL____00109) :: defines_var(BOOL____00109);
constraint array_bool_or([BOOL____00108, BOOL____00109], true);
constraint array_bool_or([BOOL____00063, BOOL____00059, BOOL____00060], true);
constraint array_bool_or([BOOL____00072, BOOL____00068, BOOL____00069], true);
constraint array_bool_or([BOOL____00094, BOOL____00090, BOOL____00091], true);
constraint array_bool_or([BOOL____00103, BOOL____00099, BOOL____00100], true);
constraint array_bool_or([BOOL____00085, BOOL____00082, BOOL____00078, BOOL____00079], true);
constraint bool2int(BOOL____00001, INT____00002) :: defines_var(INT____00002);
constraint bool2int(BOOL____00003, INT____00004) :: defines_var(INT____00004);
constraint bool2int(BOOL____00005, INT____00006) :: defines_var(INT____00006);
constraint bool2int(BOOL____00007, INT____00008) :: defines_var(INT____00008);
constraint bool2int(BOOL____00009, INT____00010) :: defines_var(INT____00010);
constraint bool2int(BOOL____00011, INT____00012) :: defines_var(INT____00012);
constraint bool2int(BOOL____00013, INT____00014) :: defines_var(INT____00014);
constraint bool2int(BOOL____00015, INT____00016) :: defines_var(INT____00016);
constraint bool2int(BOOL____00017, INT____00018) :: defines_var(INT____00018);
constraint bool2int(BOOL____00019, INT____00020) :: defines_var(INT____00020);
constraint bool2int(BOOL____00021, INT____00022) :: defines_var(INT____00022);
constraint bool2int(BOOL____00023, INT____00024) :: defines_var(INT____00024);
constraint bool2int(BOOL____00025, INT____00026) :: defines_var(INT____00026);
constraint bool2int(BOOL____00027, INT____00028) :: defines_var(INT____00028);
constraint bool2int(BOOL____00029, INT____00030) :: defines_var(INT____00030);
constraint bool2int(BOOL____00031, INT____00032) :: defines_var(INT____00032);
constraint bool2int(BOOL____00033, INT____00034) :: defines_var(INT____00034);
constraint bool2int(BOOL____00035, INT____00036) :: defines_var(INT____00036);
constraint bool2int(BOOL____00037, INT____00038) :: defines_var(INT____00038);
constraint bool2int(BOOL____00039, INT____00040) :: defines_var(INT____00040);
constraint bool2int(BOOL____00041, INT____00042) :: defines_var(INT____00042);
constraint bool2int(BOOL____00043, INT____00044) :: defines_var(INT____00044);
constraint bool2int(BOOL____00045, INT____00046) :: defines_var(INT____00046);
constraint bool2int(BOOL____00047, INT____00048) :: defines_var(INT____00048);
constraint bool2int(BOOL____00049, INT____00050) :: defines_var(INT____00050);
constraint bool2int(BOOL____00051, INT____00052) :: defines_var(INT____00052);
constraint bool2int(BOOL____00053, INT____00054) :: defines_var(INT____00054);
constraint int_eq(grid[1], 1);
constraint int_eq(grid[3], 2);
constraint int_eq(grid[7], 3);
constraint int_eq(when[1], 1);
constraint int_eq(when[3], 1);
constraint int_eq(when[7], 1);
constraint int_eq_reif(grid[1], 1, BOOL____00001) :: defines_var(BOOL____00001);
constraint int_eq_reif(grid[1], 2, BOOL____00019) :: defines_var(BOOL____00019);
constraint int_eq_reif(grid[1], 3, BOOL____00037) :: defines_var(BOOL____00037);
constraint int_eq_reif(grid[2], 1, BOOL____00003) :: defines_var(BOOL____00003);
constraint int_eq_reif(grid[2], 2, BOOL____00021) :: defines_var(BOOL____00021);
constraint int_eq_reif(grid[2], 3, BOOL____00039) :: defines_var(BOOL____00039);
constraint int_eq_reif(grid[2], grid[1], BOOL____00061) :: defines_var(BOOL____00061);
constraint int_eq_reif(grid[2], grid[3], BOOL____00057) :: defines_var(BOOL____00057);
constraint int_eq_reif(grid[2], grid[5], BOOL____00055) :: defines_var(BOOL____00055);
constraint int_eq_reif(grid[3], 1, BOOL____00005) :: defines_var(BOOL____00005);
constraint int_eq_reif(grid[3], 2, BOOL____00023) :: defines_var(BOOL____00023);
constraint int_eq_reif(grid[3], 3, BOOL____00041) :: defines_var(BOOL____00041);
constraint int_eq_reif(grid[4], 1, BOOL____00007) :: defines_var(BOOL____00007);
constraint int_eq_reif(grid[4], 2, BOOL____00025) :: defines_var(BOOL____00025);
constraint int_eq_reif(grid[4], 3, BOOL____00043) :: defines_var(BOOL____00043);
constraint int_eq_reif(grid[4], grid[1], BOOL____00066) :: defines_var(BOOL____00066);
constraint int_eq_reif(grid[4], grid[5], BOOL____00070) :: defines_var(BOOL____00070);
constraint int_eq_reif(grid[4], grid[7], BOOL____00064) :: defines_var(BOOL____00064);
constraint int_eq_reif(grid[5], 1, BOOL____00009) :: defines_var(BOOL____00009);
constraint int_eq_reif(grid[5], 2, BOOL____00027) :: defines_var(BOOL____00027);
constraint int_eq_reif(grid[5], 3, BOOL____00045) :: defines_var(BOOL____00045);
constraint int_eq_reif(grid[5], grid[2], BOOL____00076) :: defines_var(BOOL____00076);
constraint int_eq_reif(grid[5], grid[4], BOOL____00083) :: defines_var(BOOL____00083);
constraint int_eq_reif(grid[5], grid[6], BOOL____00080) :: defines_var(BOOL____00080);
constraint int_eq_reif(grid[5], grid[8], BOOL____00074) :: defines_var(BOOL____00074);
constraint int_eq_reif(grid[6], 1, BOOL____00011) :: defines_var(BOOL____00011);
constraint int_eq_reif(grid[6], 2, BOOL____00029) :: defines_var(BOOL____00029);
constraint int_eq_reif(grid[6], 3, BOOL____00047) :: defines_var(BOOL____00047);
constraint int_eq_reif(grid[6], grid[3], BOOL____00088) :: defines_var(BOOL____00088);
constraint int_eq_reif(grid[6], grid[5], BOOL____00092) :: defines_var(BOOL____00092);
constraint int_eq_reif(grid[6], grid[9], BOOL____00086) :: defines_var(BOOL____00086);
constraint int_eq_reif(grid[7], 1, BOOL____00013) :: defines_var(BOOL____00013);
constraint int_eq_reif(grid[7], 2, BOOL____00031) :: defines_var(BOOL____00031);
constraint int_eq_reif(grid[7], 3, BOOL____00049) :: defines_var(BOOL____00049);
constraint int_eq_reif(grid[8], 1, BOOL____00015) :: defines_var(BOOL____00015);
constraint int_eq_reif(grid[8], 2, BOOL____00033) :: defines_var(BOOL____00033);
constraint int_eq_reif(grid[8], 3, BOOL____00051) :: defines_var(BOOL____00051);
constraint int_eq_reif(grid[8], grid[5], BOOL____00095) :: defines_var(BOOL____00095);
constraint int_eq_reif(grid[8], grid[7], BOOL____00101) :: defines_var(BOOL____00101);
constraint int_eq_reif(grid[8], grid[9], BOOL____00097) :: defines_var(BOOL____00097);
constraint int_eq_reif(grid[9], 1, BOOL____00017) :: defines_var(BOOL____00017);
constraint int_eq_reif(grid[9], 2, BOOL____00035) :: defines_var(BOOL____00035);
constraint int_eq_reif(grid[9], 3, BOOL____00053) :: defines_var(BOOL____00053);
constraint int_eq_reif(grid[9], grid[6], BOOL____00104) :: defines_var(BOOL____00104);
constraint int_eq_reif(grid[9], grid[8], BOOL____00106) :: defines_var(BOOL____00106);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1], [INT____00002, INT____00004, INT____00006, INT____00008, INT____00010, INT____00012, INT____00014, INT____00016, INT____00018], 2);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1], [INT____00020, INT____00022, INT____00024, INT____00026, INT____00028, INT____00030, INT____00032, INT____00034, INT____00036], 3);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1, 1], [INT____00038, INT____00040, INT____00042, INT____00044, INT____00046, INT____00048, INT____00050, INT____00052, INT____00054], 4);
constraint int_lin_eq_reif([-1, 1], [when[1], when[2]], 1, BOOL____00062) :: defines_var(BOOL____00062);
constraint int_lin_eq_reif([-1, 1], [when[1], when[4]], 1, BOOL____00067) :: defines_var(BOOL____00067);
constraint int_lin_eq_reif([-1, 1], [when[2], when[5]], 1, BOOL____00077) :: defines_var(BOOL____00077);
constraint int_lin_eq_reif([-1, 1], [when[3], when[6]], 1, BOOL____00089) :: defines_var(BOOL____00089);
constraint int_lin_eq_reif([-1, 1], [when[4], when[5]], 1, BOOL____00084) :: defines_var(BOOL____00084);
constraint int_lin_eq_reif([-1, 1], [when[5], when[6]], 1, BOOL____00093) :: defines_var(BOOL____00093);
constraint int_lin_eq_reif([-1, 1], [when[5], when[8]], 1, BOOL____00096) :: defines_var(BOOL____00096);
constraint int_lin_eq_reif([-1, 1], [when[6], when[9]], 1, BOOL____00105) :: defines_var(BOOL____00105);
constraint int_lin_eq_reif([-1, 1], [when[7], when[8]], 1, BOOL____00102) :: defines_var(BOOL____00102);
constraint int_lin_eq_reif([-1, 1], [when[8], when[9]], 1, BOOL____00107) :: defines_var(BOOL____00107);
constraint int_lin_eq_reif([1, -1], [when[2], when[3]], 1, BOOL____00058) :: defines_var(BOOL____00058);
constraint int_lin_eq_reif([1, -1], [when[2], when[5]], 1, BOOL____00056) :: defines_var(BOOL____00056);
constraint int_lin_eq_reif([1, -1], [when[4], when[5]], 1, BOOL____00071) :: defines_var(BOOL____00071);
constraint int_lin_eq_reif([1, -1], [when[4], when[7]], 1, BOOL____00065) :: defines_var(BOOL____00065);
constraint int_lin_eq_reif([1, -1], [when[5], when[6]], 1, BOOL____00081) :: defines_var(BOOL____00081);
constraint int_lin_eq_reif([1, -1], [when[5], when[8]], 1, BOOL____00075) :: defines_var(BOOL____00075);
constraint int_lin_eq_reif([1, -1], [when[6], when[9]], 1, BOOL____00087) :: defines_var(BOOL____00087);
constraint int_lin_eq_reif([1, -1], [when[8], when[9]], 1, BOOL____00098) :: defines_var(BOOL____00098);
constraint int_ne(grid[3], 1);
constraint int_ne(grid[3], 3);
constraint int_ne(grid[4], 2);
constraint int_ne(grid[5], 1);
constraint int_ne(grid[6], 1);
constraint int_ne(grid[7], 1);
constraint int_ne(grid[7], 2);
constraint int_ne(grid[8], 1);
constraint int_ne(grid[8], 2);
constraint int_ne(grid[9], 1);
solve  :: int_search([grid[1], grid[2], grid[3], grid[4], grid[5], grid[6], grid[7], grid[8], grid[9]], first_fail, indomain_split, complete) satisfy;
